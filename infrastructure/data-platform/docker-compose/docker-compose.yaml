version: '3.8'

services:
  # Daster Webserver UI
  dagster-webserver:
    build: 
      context: ../../..
      dockerfile: infrastructure/data-platform/dagster/Dockerfile
    ports:
      - "3001:3001"  # Add this port mapping
    entrypoint:
      - dagster-webserver
      - -h
      - "0.0.0.0"
      - -p
      - "3001"
      - -w
      - workspace.yaml
    container_name: dagster_webserver
    environment:
      DAGSTER_POSTGRES_USER: dagster
      DAGSTER_POSTGRES_PASSWORD: dagsterpass
      DAGSTER_POSTGRES_DB: dagster
    volumes: # Make docker client accessible so we can terminate containers from the webserver
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/io_manager_storage:/tmp/io_manager_storage
      - /mnt/c/F1Data:/data
    networks:
      - data_platform

  # Dagster Daemon
  dagster-daemon:
    build: 
      context: ../../..
      dockerfile: infrastructure/data-platform/dagster/Dockerfile
    entrypoint:
      - dagster-daemon
      - run
    restart: on-failure
    container_name: dagster_daemon
    depends_on:
      - dagster-code
      - postgres
    environment:
      DAGSTER_POSTGRES_USER: dagster
      DAGSTER_POSTGRES_PASSWORD: dagsterpass
      DAGSTER_POSTGRES_DB: dagster
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/io_manager_storage:/tmp/io_manager_storage
      - /mnt/c/F1Data:/data
    networks:
      - data_platform

  # Dagster Code 
  dagster-code:
    build: 
      context: ../../..
      dockerfile: code/data-platform/core/orchestration/dagster/Dockerfile
    
    container_name: dagster_code
    image: dagster_code_image
    restart: always
    environment:
      DAGSTER_POSTGRES_USER: dagster
      DAGSTER_POSTGRES_PASSWORD: dagsterpass
      DAGSTER_POSTGRES_DB: dagster
      DAGSTER_CURRENT_IMAGE: dagster_code_image
      
    volumes:
      - /mnt/c/F1Data:/data
    networks:
      - data_platform
    

  # Optional: DuckDB CLI container for database access
  duckdb-cli:
    image: python:3.10-slim
    container_name: duckdb_access
    command: 
      - /bin/bash
      - -c
      - |
        pip install duckdb pandas &&
        echo "DuckDB ready. Use: docker exec -it duckdb_access python3" &&
        tail -f /dev/null
    volumes:
      - /home/ace/Projects/Data-Platform-Agent-Builder/data:/data
    networks:
      - data_platform
    profiles: ["tools"]
    restart: unless-stopped

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: dagster
      POSTGRES_PASSWORD: dagsterpass
      POSTGRES_DB: dagster
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - data_platform

volumes:
  postgres_data:
    driver: local
  dagster_data:
    driver: local
  dbt_data:
    driver: local
  

networks:
  data_platform:
    name: data_platform
    driver: bridge